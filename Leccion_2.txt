
Leccion 2 - Crear archivos, mostrar contenidos y estadisitcas.



-------------- comando 1: touch ----------------------------------

El comando touch en linux crea un archivo ( si ya existe este archivo, lo va a sobrescribir )

ejemplo: 

touch file1.txt


------------------- comando 2: dir -----------------------------------------

dir es usado para listar contenido de directorios es iguala  usar ls



------------------- comando 3: clear -----------------------------------------

clear limpia tu consola! ( los outputs ) y deja tu consola vacia


clear



------------------- comando 4: echo -----------------------------------------

echo imprime un mensaje en la consola

ejemplo: echo "Hello" // Outoput: Hello


------------------------ comando 5: echo + > -----------------------------------------


echo cuando agregas el operador > asigna su OUTPUT del comando a el contenido de un archivo!


ejemplo:

        echo "hello" > saludo.txt // si no existe saludo.txt se creara

    puedes ver el contenido con cat + filename, ademas el operador > pone el output
    del comando sobrescribiendo TODO el contenido del archivo



------------------------ comando 6: >>  -----------------------------------------


Puedes con el operador >> agregar contenido a un archivo al "final" de la linea
del archivo... no sobrecribiendo nada de tu file.

ejemplo:

        echo "Saludo numero 2" >> saludo.txt



------------------------ comando 7: cat  -----------------------------------------

cat te permite ver el contenido interno de un archivo


    Ejemplo:
            cat logs.txt


----------------------- comando 8: head  -----------------------------------------

Head te permite listar el contenido de n cantidad de lineas de ARRIBA ( de la cabeca ) del archivo

Ejemplo:

        head -2 Saludo.txt // mostrara las primeras 2 lineas del archivo Saludo.txt



----------------------- comando 9: tail -----------------------------------------

Tail es lo contrario a head... basicamente... te da la "cola" del archivo de n cantidad de lineas que espesifiques

Ejemplo:

    tail -1 Saludos.txt

    ( si no mandas -n mostrara por defecto las ultimas 10 lineas )




----------------------- comando 10: stat  -----------------------------------------

te da estadisticas detalladas de un archivo o directorio!

el output de , ejemplo, stat saludo.txt es igual a:


-sh-4.2$ stat saludo.txt                                               
  File: ‘saludo.txt’                                                   
  Size: 43              Blocks: 8          IO Block: 4096   regular file    

Device: 810h/2064d      Inode: 272457014   Links: 1                    
Access: (0664/-rw-rw-r--)  Uid: (317356/   Khey1)   Gid: (317415/   Khe
y1)                    

Context: guest_u:object_r:user_home_t:s0                               
Access: 2024-08-16 22:15:42.334935509 +0000                            
Modify: 2024-08-16 22:15:40.911898168 +0000                            
Change: 2024-08-16 22:15:40.911898168 +0000                            
 Birth: -


CONCEPTOS:

    File: Muestra el nombre del archivo sobre el cual se esta consultando informacion.

    Size: indica el tamaño en bytes del archivo...

    Block: Muestra el numero de bloques de disco utilizados por el archivo.

            ¿Que es un bloque?

            R: Un bloque es una unidad de almacenamiento en el disco, aqui se estan usando 8 bloques

            En los sistemas de archivos de los sistemas operativos, un bloque es la unidad básica de
            almacenamiento en disco.

            un disco duro o SSD se divide en bloques o sectores. CADA BLOQUE tiene un tamaño fijo
            que se define cuando se formatea el disco. El tamaño comun para estos bloques es de 4 KB,
            aunque puede variar ( por ejemplo, 512 bytes, 8 kb, etc )

            CUANDO UN ARCHIVO ES GUARDADO EN TU FS, se divide en bloques de 4kb ( depende el sistema )

            osea, si tu arhico pesa 401 kb... ocupara 101 bloques de 4kb, y como 101 bloques es igual a 404kb
            , estaras desperdiciando 3kb de almacenamientod e tu disco duro


    IO Block: te dice que para Lectura y Escritura ocupara bloques de 4kb ( 4096 )

    regular file: te dice que es un tipo de archivo regular, en contrasre con directorios, enlaces simbolicos, etc.


    Device: 810h/2064d

            Muestra el identificador del dispositivo en el que reside el archivo

            810: es el identificador hexadecimal 
            
            2064d: es el identificador decimal.

    Inode: 272457014

        El número de inodo es un identificador unico para el archivo en el sistema de archivos...
        el inodo contiene informacion sobre ela rchivo, su tamaño y ubicacion en el disco.


    Links:

            indica el numero de ENLACES DUROS ( hard links ) que apuntan al archivo

            un hard link es una referencia adicional a un archivo en un sistema de archivos
            Unix/Linux


    Access: Muestra la fecha y hora de la ultima vez que el estado del archivo fue accedido

    Uid: es el identificador unico del usuario ( ejemplo 317356), ademas d emostar tu nombre de usuario

    Gid: Es el identificador de grupo y ek nombre del grupo


    Context: Muestra el contexto de seguridad de SELinux ( Security Enhanced Linux) aqui se indica que el
            archivo tiene el contexto 'guest_u:object_r:user_home_t:s0

    Modify: Fecha y hora de ultima modificacion

    Change: muestra fecha y hora de CAMBIOS a nivel de permisos o propiedad


    Birth: indica fecha y hora en el que ela rchivo fue creado.


----------------------- comando  -----------------------------------------





















